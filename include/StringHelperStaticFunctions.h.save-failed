#pragma once

#ifdef DEBUG
#include <iostream>
#endif // DEBUG

#include <algorithm>
#include <string>


namespace StringHelper
{

// Function returns whether range limits are of same type
// For example, both are digits, or lower case letters.
extern bool IsSameType(char a, char b);

// Checks if first n of strings are of same type
// Checks until either one's end if n is too big
// For example, following returns true:
//      one = "A1b2a1A"
//      two = "G6k3"
//      n   = 5
//  following returns false:
//      one = "1234a"
//      two = "1234A"
//      n   = 5
extern bool SameTypeCharacters(std::string& one, std::string& two, uint32_t n = 0);

// Same as SameTypeCharacters in reverse.
extern bool Reverse_SameTypeCharacters(std::string one, std::string two, uint32_t n = 0);

// Function returns $outStr as $inStr left shifted once
// For example, for input "ABCDE", output is "BCDE".
extern std::string ShiftLeft(const std::string& str);

// Function returns $outStr as $inStr left shifted once
// For example, for input "ABCDE", output is "BCDE".
extern std::string ShiftRight(const std::string& str);

}


